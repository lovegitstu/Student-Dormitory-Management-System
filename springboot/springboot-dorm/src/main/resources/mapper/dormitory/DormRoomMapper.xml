<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.dorm.mapper.DormRoomMapper">
    
    <resultMap type="DormRoom" id="DormRoomResult">
        <result property="roomId"    column="room_id"    />
        <result property="roomNumber"    column="room_number"    />
        <result property="floorId"    column="floor_id"    />
        <result property="roomType"    column="room_type"    />
        <result property="roomStatus"    column="room_status"    />
        <result property="maxCapacity"    column="max_capacity"    />
        <result property="currentOccupancy"    column="current_occupancy"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectDormRoomVo">
        select room_id, room_number, floor_id, room_type, room_status, max_capacity, current_occupancy, create_by, create_time, update_by, update_time, remark from dorm_room
    </sql>

    <select id="selectDormRoomList" parameterType="DormRoom" resultMap="DormRoomResult">
        <include refid="selectDormRoomVo"/>
        <where>  
            <if test="roomNumber != null  and roomNumber != ''"> and room_number like concat('%', #{roomNumber}, '%')</if>
            <if test="floorId != null "> and floor_id = #{floorId}</if>
            <if test="roomType != null  and roomType != ''"> and room_type = #{roomType}</if>
            <if test="roomStatus != null  and roomStatus != ''"> and room_status = #{roomStatus}</if>
        </where>
    </select>
    
    <select id="selectDormRoomByRoomId" parameterType="Long" resultMap="DormRoomResult">
        <include refid="selectDormRoomVo"/>
        where room_id = #{roomId}
    </select>
        
    <insert id="insertDormRoom" parameterType="DormRoom" useGeneratedKeys="true" keyProperty="roomId">
        insert into dorm_room
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roomNumber != null">room_number,</if>
            <if test="floorId != null">floor_id,</if>
            <if test="roomType != null">room_type,</if>
            <if test="roomStatus != null">room_status,</if>
            <if test="maxCapacity != null">max_capacity,</if>
            <if test="currentOccupancy != null">current_occupancy,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roomNumber != null">#{roomNumber},</if>
            <if test="floorId != null">#{floorId},</if>
            <if test="roomType != null">#{roomType},</if>
            <if test="roomStatus != null">#{roomStatus},</if>
            <if test="maxCapacity != null">#{maxCapacity},</if>
            <if test="currentOccupancy != null">#{currentOccupancy},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateDormRoom" parameterType="DormRoom">
        update dorm_room
        <trim prefix="SET" suffixOverrides=",">
            <if test="roomNumber != null">room_number = #{roomNumber},</if>
            <if test="floorId != null">floor_id = #{floorId},</if>
            <if test="roomType != null">room_type = #{roomType},</if>
            <if test="roomStatus != null">room_status = #{roomStatus},</if>
            <if test="maxCapacity != null">max_capacity = #{maxCapacity},</if>
            <if test="currentOccupancy != null">current_occupancy = #{currentOccupancy},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where room_id = #{roomId}
    </update>

    <delete id="deleteDormRoomByRoomId" parameterType="Long">
        delete from dorm_room where room_id = #{roomId}
    </delete>

    <delete id="deleteDormRoomByRoomIds" parameterType="String">
        delete from dorm_room where room_id in 
        <foreach item="roomId" collection="array" open="(" separator="," close=")">
            #{roomId}
        </foreach>
    </delete>

    <!-- 统计房间总数 -->
    <select id="countTotalRooms" resultType="java.lang.Integer">
        select count(*) from dorm_dormitory
    </select>

    <!-- 根据楼层ID列表统计房间数量 -->
    <select id="countByFloorIds" parameterType="java.util.List" resultType="java.lang.Integer">
        select count(*) from dorm_dormitory
        where f_id in
        <foreach item="floorId" collection="list" open="(" separator="," close=")">
            #{floorId}
        </foreach>
    </select>

    <!-- 查询各房间类型入住率统计 -->
    <select id="selectOccupancyByRoomType" resultType="java.util.Map">
        select 
            dr.dor_type as roomType,
            count(dr.dor_id) as totalRooms,
            count(db.bed_id) as totalBeds,
            sum(case when db.stu_id is not null then 1 else 0 end) as occupiedBeds,
            case 
                when count(db.bed_id) = 0 then 0.0
                else round(sum(case when db.stu_id is not null then 1 else 0 end) * 100.0 / count(db.bed_id), 2)
            end as occupancyRate
        from dorm_dormitory dr
        left join dorm_bed db on dr.dor_id = db.room_id
        group by dr.dor_type
        order by dr.dor_type
    </select>

</mapper>